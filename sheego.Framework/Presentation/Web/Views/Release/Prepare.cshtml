@model sheego.Framework.Presentation.Web.Models.ReleasePrepared

@{
    ViewBag.Title = "Prepare release";
}

<h2>@ViewBag.Title</h2>

@using (Html.BeginForm("Prepare", "Release", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <h4>@ViewBag.Message</h4>

    <!-- Text input-->
    <div class="form-group row">
        @Html.LabelFor(model => model.Release.Version, new { @class = "col-md-2 control-label", @for = "textinput" })
        <div class="col-md-4">
            @Html.DisplayFor(model => model.Release.Version, new { @class = "form-control input-md" })
            @Html.HiddenFor(model => model.Release.Version)
        </div>
    </div>

    <!-- Textarea -->
    <div class="form-group row">
        @Html.LabelFor(model => model.Release.Description, new { @class = "col-md-2 control-label", @for = "textarea" })
        <div class="col-md-4">
            @Html.DisplayFor(model => model.Release.Description, new { @class = "form-control input-md" })
            @Html.HiddenFor(model => model.Release.Description)
        </div>
    </div>

    <!-- Due Date-->
    <div class="form-group row">
        @Html.LabelFor(model => model.Release.DueDate, new { @class = "col-md-2 control-label", @for = "date" })
        <div class="col-md-4">
            @Html.DisplayFor(model => model.Release.DueDate) <!-- ToDo: Change text to something generic -->
            @Html.HiddenFor(model => model.Release.DueDate)
        </div>
    </div>

    <hr />
    <h4>Release Element</h4>

    <!-- List of release elements -->
    <div class="form-group row">
        <div class="col-md-4"> <!-- ToDo: Input box needs to be wider or 2 boxes for xml entry -->
            @*@Html.EditorFor(model => model.newReleaseElement, new { placeholder = "Enter release element" })*@
            @Html.TextBoxFor(model => model.newReleaseElement, new { type = "file" })
        </div>
        <div class="col-md-2">
            <button name="action" value="addreleaseelement" class="btn btn-primary">Add release element</button>
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-4">
            @Html.DisplayFor(model => model.newReleaseElement.FileName)
        </div>
    </div>

    <hr />
    <h4>Release Unit</h4>

    <!-- List of releaseunits -->
    <table class="table">
        @if (Model.Release.UnitList.Any())
        {
            <tr>
                <th>Release Unit List</th>
                @for (var i = 0; i < Model.Release.UnitList[0].StakeholderList.Count; i++)
                {<!-- ToDo: Exceptionally using stakeholders list directly from Release object which may be not so bad of an idea anyway -->
                    <th style="text-align:center">@Model.Release.UnitList[0].StakeholderList[i].Name</th>
                    @*@Html.HiddenFor(model => model.Release.UnitList[0].StakeholderList[i].Name)*@
                }
            </tr>
            for (var j = 0; j < Model.Release.UnitList.Count; j++)
            {
                <tr>
                    <td>@Html.DisplayFor(model => model.Release.UnitList[j].Name)</td>
                    @Html.HiddenFor(model => model.Release.UnitList[j].Name)
                    @for (var k = 0; k < Model.Release.UnitList[j].StakeholderList.Count; k++)
                    {
                        <td style="text-align:center">@Html.DisplayFor(model => model.Release.UnitList[j].StakeholderList[k].isParticipating)</td>
                        @Html.HiddenFor(model => model.Release.UnitList[j].StakeholderList[k].Name)
                        @Html.HiddenFor(model => model.Release.UnitList[j].StakeholderList[k].isParticipating)
                    }
                </tr>
            }
        }
        else
        {
            <tr>
                <th>No Release Units to display</th>
            </tr>
        }
    </table>

    <!-- Buttons -->
    <div class="form-group row">
        <div class="col-md-2">
            <button name="action" value="save" class="btn btn-primary">Save</button>
        </div>
        @*<div class="col-md-2 col-md-offset-2">
            <button name="action" value="confirmprepare" class="btn btn-primary">Confirm</button>
        </div>*@
    </div>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
